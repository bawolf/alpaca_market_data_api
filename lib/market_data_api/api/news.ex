# NOTE: This file is auto generated by OpenAPI Generator 7.6.0 (https://openapi-generator.tech).
# Do not edit this file manually.

defmodule MarketDataAPI.Api.News do
  @moduledoc """
  API calls for all endpoints tagged `News`.
  """

  alias MarketDataAPI.Connection
  import MarketDataAPI.RequestBuilder

  @doc """
  News API
  Returns latest news articles across stocks and crypto. By default returns latest 10 news articles.

  ### Parameters

  - `connection` (MarketDataAPI.Connection): Connection to server
  - `symbols` (String.t): The comma-separated list of crypto symbols to query for. Note, currently all crypto symbols must be appended with \"USD\", ie \"BTCUSD,ETHUSD\" would get both BTC and ETH
  - `opts` (keyword): Optional parameters
    - `:start` (DateTime.t): Filter data equal to or after this time in RFC-3339 format. Fractions of a second are not accepted.
    - `:end` (DateTime.t): Filter data equal to or before this time in RFC-3339 format. Fractions of a second are not accepted.
    - `:limit` (integer()): Number of data points to return. Must be in range 1-10000, defaults to 1000.
    - `:sort` (String.t): Sort articles by updated date. Options: DESC, ASC
    - `:include_content` (boolean()): Boolean indicator to include content for news articles (if available)
    - `:exclude_contentless` (boolean()): Boolean indicator to exclude news articles that do not contain content 
    - `:page_token` (String.t): Pagination token to continue from. The value to pass here is returned in specific requests when more data is available than the request limit allows.

  ### Returns

  - `{:ok, MarketDataAPI.Model.GetNewsResponse.t}` on success
  - `{:error, Tesla.Env.t}` on failure
  """
  @spec get_news(Tesla.Env.client, String.t, keyword()) :: {:ok, MarketDataAPI.Model.GetNewsResponse.t} | {:error, Tesla.Env.t}
  def get_news(connection, symbols, opts \\ []) do
    optional_params = %{
      :start => :query,
      :end => :query,
      :limit => :query,
      :sort => :query,
      :include_content => :query,
      :exclude_contentless => :query,
      :page_token => :query
    }

    request =
      %{}
      |> method(:get)
      |> url("/v1beta1/news")
      |> add_param(:query, :symbols, symbols)
      |> add_optional_params(optional_params, opts)
      |> Enum.into([])

    connection
    |> Connection.request(request)
    |> evaluate_response([
      {200, MarketDataAPI.Model.GetNewsResponse}
    ])
  end
end
